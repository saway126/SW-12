1. 최단 거리 알고리즘 종류
  1) A-Star
	열린 목록	: 내가 앞으로 갈 수 있는 노드들
	닫힌 목록	: 내가 이미 갔던 노드들
	노드		: 각 좌표
	부모 노드	: 이동할 때 현재 노드의 이전 노드					
	G		: 출발지에서 얼마나 떨어져있나
	H		: 목적지까지 얼마나 이동해야하나(장애물은 고려하지 않는다. 대각선 X)
	F		: F+G
		



1. 현재 위치는 닫힌 목록에 넣는다.
2. 현재 위치 주변(위,아,왼,오,왼위,오위,왼아,오아)을 확인
	이 때 장애물은 제외
	이미 닫힌 목록에 있으면 제외
	열린 목록에 들어가는 노드들의 F, G, H를 계산
	이미 열린 목록에 있으면 FGH 및 부모를 더 적은 값이라면 변경
	이 때 열린 목록에 들어가는 노드들의 부모를 현재 노드로 변경

3. 열린 목록에서 F가 제일 작은 노드를 가져와서 현재 위치를 가져온 노드로 변경
	1~2번 반복
4. 목적지에 도착하면 마지막 현재 위치에서부터 출발지까지 부모노드를 가져온다.




	노드			start				
	[4,4|null, null]	[4,4|null, null]		
	F: G: H:		F: G: H:
				
				goal
				[8,4, null, null]
				F: G: H:

열린 목록	[3,3|4, 4]	[3,2|4,3]
	 	F:74 G:14 H:60	F:94 G:24 H:70

		[3,5|4, 4]	[3,6|4,5]	[7,4|7,3]
	 	F:74 G:14 H:60	F:94 G:24 H:70	F:62 G:52 H:10

		[4,2|5,3]	[5,2|5,3]	
	 	F:88 G:28 H:60	F:74 G:24 H:50	

		[4,6|5,5]	[5,6|5,5]	[6,6|5,5]
	 	F:88 G:28 H:60	F:74 G:24 H:50	F:68 G:28 H:40

		[2,3|3,4]	[2,4|3,4]	[2,5|3,4]
		F:94 G:24 H:70	F:80 G:20 H:60	F:94 G:24 H:70

		[5,1|6,2]	[6,1|6,2]	[7,1|6,2]	
		F:102 G:42 H:60	F:88 G:38 H:50	F:82 G:42 H:40	

		[7,2|6,2]	[8,2|7,3]	[8,3|7,3]	
		F:68 G:38 H:30	F:76 G:56 H:20	F:62 G:52 H:10

		
			

닫힌 목록	[4,4|null,null]	[5,4|4,4]	[5,3|4,4]
		F: G: H:	F:40 G:10 H:30	F:54 G:14 H:40
			   
		[5,5|4,4]	[4,3|4,4]	[3,4|4,4]
		F:54 G:14 H:40	F:60 G:10 H:50	F:60 G:10 H:50	

		[4,5|4, 4]	[6,2|5,3]	[7,3|6,2]
		F:60 G:10 H:50	F:68 G:28 H:40	F:62 G:42 H:20	
	
		[8,4|7,3]
		F:56 G:56 H:0














